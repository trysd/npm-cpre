#!/usr/bin/env node

/*!
 * Cpre JavaScript Library v0.0.2
 * https://github.com/trysd/npm-cpre
 * Released under the MIT license
 *
 * Date: 2023-01-25T08:35Z
 */
'use strict';

var CommandLine = /** @class */ (function () {
    function CommandLine(commandLine) {
        this.cl = [];
        this.cl = commandLine;
    }
    CommandLine.prototype.main = function () {
        var _a;
        if (this.cl.length > 2 && ((_a = this.cl[2]) === null || _a === void 0 ? void 0 : _a.match(/--ja|-j/))) {
            this.coreJa();
        }
        else {
            this.core();
        }
    };
    CommandLine.prototype.coreJa = function () {
        console.log("-- git Commit Message Format --\n(quote source: https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commit-message-format)\n\n# Format\n<type>(<scope>): <subject>\n\n# Type\nfeat\uFF1A \u65B0\u6A5F\u80FD\nfix: \u30D0\u30B0\u4FEE\u6B63\ndocs: \u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u306E\u307F\u306E\u5909\u66F4\nstyle: \u30B3\u30FC\u30C9\u306E\u610F\u5473\u306B\u5F71\u97FF\u3092\u4E0E\u3048\u306A\u3044\u5909\u66F4 (\u7A7A\u767D\u3001\u66F8\u5F0F\u8A2D\u5B9A\u3001\u30BB\u30DF\u30B3\u30ED\u30F3\u306E\u6B20\u843D\u306A\u3069)\nrefactor: \u30D0\u30B0\u306E\u4FEE\u6B63\u3082\u6A5F\u80FD\u306E\u8FFD\u52A0\u3082\u884C\u308F\u306A\u3044\u30B3\u30FC\u30C9\u5909\u66F4\nperf: \u30D1\u30D5\u30A9\u30FC\u30DE\u30F3\u30B9\u3092\u5411\u4E0A\u3055\u305B\u308B\u30B3\u30FC\u30C9\u5909\u66F4\ntest: \u4E0D\u8DB3\u3057\u3066\u3044\u308B\u30C6\u30B9\u30C8\u306E\u8FFD\u52A0\u307E\u305F\u306F\u65E2\u5B58\u306E\u30C6\u30B9\u30C8\u306E\u4FEE\u6B63\nchore: \u30C9\u30AD\u30E5\u30E1\u30F3\u30C8\u751F\u6210\u306A\u3069\u306E\u30D3\u30EB\u30C9 \u30D7\u30ED\u30BB\u30B9\u307E\u305F\u306F\u88DC\u52A9\u30C4\u30FC\u30EB\u3068\u30E9\u30A4\u30D6\u30E9\u30EA\u306E\u5909\u66F4\n\n# Scope\n\u30B9\u30B3\u30FC\u30D7\u306F\u3001\u30B3\u30DF\u30C3\u30C8\u5909\u66F4\u306E\u5834\u6240\u3092\u6307\u5B9A\u3059\u308B\u3082\u306E\u3067\u3042\u308C\u3070\u4F55\u3067\u3082\u304B\u307E\u3044\u307E\u305B\u3093\u3002 \u305F\u3068\u3048\u3070\u3001$location\u3001$browser\u3001$compile\u3001$rootScope\u3001ngHref\u3001ngClick\u3001ngView \u306A\u3069...\n\u5909\u66F4\u304C\u8907\u6570\u306E\u30B9\u30B3\u30FC\u30D7\u306B\u5F71\u97FF\u3059\u308B\u5834\u5408\u306F\u3001* \u3092\u4F7F\u7528\u3067\u304D\u307E\u3059\u3002\n\n");
    };
    CommandLine.prototype.core = function () {
        console.log("-- Commit Message Format --\n(quote source: https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commit-message-format)\n\n# Format\n<type>(<scope>): <subject>\n\n# Type\nfeat: A new feature\nfix: A bug fix\ndocs: Documentation only changes\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\nrefactor: A code change that neither fixes a bug nor adds a feature\nperf: A code change that improves performance\ntest: Adding missing or correcting existing tests\nchore: Changes to the build process or auxiliary tools and libraries such as documentation generation\n\n# Scope\nThe scope could be anything specifying place of the commit change. For example $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView, etc...\nYou can use * when the change affects more than a single scope.\n\n");
    };
    return CommandLine;
}());

new CommandLine(process.argv).main();

module.exports = CommandLine;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kLWxpbmUudHMiLCIuLi8uLi9zcmMvYmluL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBDb21tYW5kTGluZSB7XG4gIHByaXZhdGUgY2w6IHN0cmluZ1tdID0gW107XG5cbiAgY29uc3RydWN0b3IoY29tbWFuZExpbmU6IHN0cmluZ1tdKSB7XG4gICAgdGhpcy5jbCA9IGNvbW1hbmRMaW5lO1xuICB9XG5cbiAgcHVibGljIG1haW4oKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuY2wubGVuZ3RoID4gMiAmJiB0aGlzLmNsWzJdPy5tYXRjaCgvLS1qYXwtai8pKSB7XG4gICAgICB0aGlzLmNvcmVKYSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNvcmUoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNvcmVKYSgpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhgLS0gZ2l0IENvbW1pdCBNZXNzYWdlIEZvcm1hdCAtLVxuKHF1b3RlIHNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9ibG9iL21hc3Rlci9ERVZFTE9QRVJTLm1kI2NvbW1pdC1tZXNzYWdlLWZvcm1hdClcblxuIyBGb3JtYXRcbjx0eXBlPig8c2NvcGU+KTogPHN1YmplY3Q+XG5cbiMgVHlwZVxuZmVhdO+8miDmlrDmqZ/og71cbmZpeDog44OQ44Kw5L+u5q2jXG5kb2NzOiDjg4njgq3jg6Xjg6Hjg7Pjg4jjga7jgb/jga7lpInmm7RcbnN0eWxlOiDjgrPjg7zjg4njga7mhI/lkbPjgavlvbHpn7/jgpLkuI7jgYjjgarjgYTlpInmm7QgKOepuueZveOAgeabuOW8j+ioreWumuOAgeOCu+ODn+OCs+ODreODs+OBruasoOiQveOBquOBqSlcbnJlZmFjdG9yOiDjg5DjgrDjga7kv67mraPjgoLmqZ/og73jga7ov73liqDjgoLooYzjgo/jgarjgYTjgrPjg7zjg4nlpInmm7RcbnBlcmY6IOODkeODleOCqeODvOODnuODs+OCueOCkuWQkeS4iuOBleOBm+OCi+OCs+ODvOODieWkieabtFxudGVzdDog5LiN6Laz44GX44Gm44GE44KL44OG44K544OI44Gu6L+95Yqg44G+44Gf44Gv5pei5a2Y44Gu44OG44K544OI44Gu5L+u5q2jXG5jaG9yZTog44OJ44Kt44Ol44Oh44Oz44OI55Sf5oiQ44Gq44Gp44Gu44OT44Or44OJIOODl+ODreOCu+OCueOBvuOBn+OBr+ijnOWKqeODhOODvOODq+OBqOODqeOCpOODluODqeODquOBruWkieabtFxuXG4jIFNjb3BlXG7jgrnjgrPjg7zjg5fjga/jgIHjgrPjg5/jg4Pjg4jlpInmm7Tjga7loLTmiYDjgpLmjIflrprjgZnjgovjgoLjga7jgafjgYLjgozjgbDkvZXjgafjgoLjgYvjgb7jgYTjgb7jgZvjgpPjgIIg44Gf44Go44GI44Gw44CBJGxvY2F0aW9u44CBJGJyb3dzZXLjgIEkY29tcGlsZeOAgSRyb290U2NvcGXjgIFuZ0hyZWbjgIFuZ0NsaWNr44CBbmdWaWV3IOOBquOBqS4uLlxu5aSJ5pu044GM6KSH5pWw44Gu44K544Kz44O844OX44Gr5b2x6Z+/44GZ44KL5aC05ZCI44Gv44CBKiDjgpLkvb/nlKjjgafjgY3jgb7jgZnjgIJcblxuYCk7XG4gIH1cblxuICBwcml2YXRlIGNvcmUoKTogdm9pZCB7XG4gICAgY29uc29sZS5sb2coYC0tIENvbW1pdCBNZXNzYWdlIEZvcm1hdCAtLVxuKHF1b3RlIHNvdXJjZTogaHR0cHM6Ly9naXRodWIuY29tL2FuZ3VsYXIvYW5ndWxhci5qcy9ibG9iL21hc3Rlci9ERVZFTE9QRVJTLm1kI2NvbW1pdC1tZXNzYWdlLWZvcm1hdClcblxuIyBGb3JtYXRcbjx0eXBlPig8c2NvcGU+KTogPHN1YmplY3Q+XG5cbiMgVHlwZVxuZmVhdDogQSBuZXcgZmVhdHVyZVxuZml4OiBBIGJ1ZyBmaXhcbmRvY3M6IERvY3VtZW50YXRpb24gb25seSBjaGFuZ2VzXG5zdHlsZTogQ2hhbmdlcyB0aGF0IGRvIG5vdCBhZmZlY3QgdGhlIG1lYW5pbmcgb2YgdGhlIGNvZGUgKHdoaXRlLXNwYWNlLCBmb3JtYXR0aW5nLCBtaXNzaW5nIHNlbWktY29sb25zLCBldGMpXG5yZWZhY3RvcjogQSBjb2RlIGNoYW5nZSB0aGF0IG5laXRoZXIgZml4ZXMgYSBidWcgbm9yIGFkZHMgYSBmZWF0dXJlXG5wZXJmOiBBIGNvZGUgY2hhbmdlIHRoYXQgaW1wcm92ZXMgcGVyZm9ybWFuY2VcbnRlc3Q6IEFkZGluZyBtaXNzaW5nIG9yIGNvcnJlY3RpbmcgZXhpc3RpbmcgdGVzdHNcbmNob3JlOiBDaGFuZ2VzIHRvIHRoZSBidWlsZCBwcm9jZXNzIG9yIGF1eGlsaWFyeSB0b29scyBhbmQgbGlicmFyaWVzIHN1Y2ggYXMgZG9jdW1lbnRhdGlvbiBnZW5lcmF0aW9uXG5cbiMgU2NvcGVcblRoZSBzY29wZSBjb3VsZCBiZSBhbnl0aGluZyBzcGVjaWZ5aW5nIHBsYWNlIG9mIHRoZSBjb21taXQgY2hhbmdlLiBGb3IgZXhhbXBsZSAkbG9jYXRpb24sICRicm93c2VyLCAkY29tcGlsZSwgJHJvb3RTY29wZSwgbmdIcmVmLCBuZ0NsaWNrLCBuZ1ZpZXcsIGV0Yy4uLlxuWW91IGNhbiB1c2UgKiB3aGVuIHRoZSBjaGFuZ2UgYWZmZWN0cyBtb3JlIHRoYW4gYSBzaW5nbGUgc2NvcGUuXG5cbmApO1xuICB9XG59IiwiaW1wb3J0IHsgQ29tbWFuZExpbmUgfSBmcm9tICcuLi9jb21tYW5kLWxpbmUnO1xubmV3IENvbW1hbmRMaW5lKHByb2Nlc3MuYXJndikubWFpbigpO1xuZXhwb3J0IGRlZmF1bHQgQ29tbWFuZExpbmU7XG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFdBQUEsa0JBQUEsWUFBQTtBQUdFLElBQUEsU0FBQSxXQUFBLENBQVksV0FBcUIsRUFBQTtRQUZ6QixJQUFFLENBQUEsRUFBQSxHQUFhLEVBQUUsQ0FBQztBQUd4QixRQUFBLElBQUksQ0FBQyxFQUFFLEdBQUcsV0FBVyxDQUFDO0tBQ3ZCO0FBRU0sSUFBQSxXQUFBLENBQUEsU0FBQSxDQUFBLElBQUksR0FBWCxZQUFBOztRQUNFLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxLQUFJLENBQUEsRUFBQSxHQUFBLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQUEsSUFBQSxJQUFBLEVBQUEsS0FBQSxLQUFBLENBQUEsR0FBQSxLQUFBLENBQUEsR0FBQSxFQUFBLENBQUUsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFBLEVBQUU7WUFDdEQsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ2YsU0FBQTtBQUFNLGFBQUE7WUFDTCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDYixTQUFBO0tBQ0YsQ0FBQTtBQUVPLElBQUEsV0FBQSxDQUFBLFNBQUEsQ0FBQSxNQUFNLEdBQWQsWUFBQTtBQUNFLFFBQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvcURBb0JmLENBQUMsQ0FBQztLQUNBLENBQUE7QUFFTyxJQUFBLFdBQUEsQ0FBQSxTQUFBLENBQUEsSUFBSSxHQUFaLFlBQUE7QUFDRSxRQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMscTJCQW9CZixDQUFDLENBQUM7S0FDQSxDQUFBO0lBQ0gsT0FBQyxXQUFBLENBQUE7QUFBRCxDQUFDLEVBQUE7O0FDN0RELElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUU7Ozs7In0=
